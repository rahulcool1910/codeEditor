{"version":3,"sources":["plugin/esBuildPlugin.ts","Components/codeEditor.tsx","Components/resizable.tsx","Components/preview.tsx","App.tsx","store/actionTypes/types.ts","reportWebVitals.ts","store/reducers/RepositoryReducers.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["unpkgPathPlugin","contents","name","setup","build","onResolve","filter","args","a","path","namespace","includes","URL","resolveDir","href","onLoad","loader","localforage","getItem","cachedData","axios","get","data","request","match","escaped","replace","result","responseURL","pathname","setItem","CodeEditor","compiler","initialValue","editorRef","useRef","className","editorDidMount","getValue","monaco","onDidChangeModelContent","current","highlighter","Highlighter","window","codeShift","highLightOnDidChangeModelContent","undefined","error","console","log","value","height","width","language","theme","options","wordWrap","lineNumbersMinChars","scrollBeyondLastLine","showUnused","automaticLayout","tabIndex","fontSize","onClick","unformattedCode","formattedCode","prettier","format","parser","plugins","useTabs","semi","singleQuote","setValue","Resizable","resizableProp","direction","children","useState","innerWidth","setInnerWidth","innerHeight","setInnerHeight","useEffect","timer","listener","clearTimeout","setTimeout","addEventListener","removeEventListener","Infinity","resizeHandles","minConstraints","maxConstraints","createInstance","Preview","ref","esbuildRef","startService","esBuild","worker","wasmURL","time","initializeApp","event","text","srcdoc","html","entryPoints","bundle","write","define","Global","contentWindow","postMessage","outputFiles","title","v4","srcDoc","sandbox","App","stateType","editor","Array","fill","map","_","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","RepositoryReduces","state","action","type","start_search","search_success","payload","search_error","message","reducers","combineReducers","Repository","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57929d02.chunk.js","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport axios from 'axios';\nimport localforage from 'localforage';\n\nexport const unpkgPathPlugin = (contents: string) => {\n  return {\n    name: 'unpkg-path-plugin',\n    setup(build: esbuild.PluginBuild) {\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\n        // console.log('onResolve', args);\n        if (args.path === 'index.js') {\n          return { path: args.path, namespace: 'a' };\n        }\n\n        if (args.path.includes('./') || args.path.includes('../')) {\n          return {\n            namespace: 'a',\n            path: new URL(\n              args.path,\n              'https://unpkg.com' + args.resolveDir + '/'\n            ).href,\n          };\n        }\n\n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`,\n        };\n      });\n\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        // console.log('onLoad', args);\n\n        if (args.path === 'index.js') {\n          return {\n            loader: 'jsx',\n            contents,\n          };\n        }\n        const cachedData = await localforage.getItem<esbuild.OnLoadResult>(\n          args.path\n        );\n          if (cachedData) {\n             return cachedData;\n          }\n        const { data, request } = await axios.get(args.path);\n        const loader = args.path.match(/.css$/) ? 'css' : 'jsx';\n\n        const escaped = data\n          .replace(/\\n/g, '')\n          .replace(/\"/g, '\\\\\"')\n          .replace(/'/g, \"\\\\'\");\n        // console.log(escaped);\n\n        contents =\n          loader === 'css'\n            ? `const style=document.createElement('style');\n            style.innerText='${escaped}'\n            document.head.appendChild(style);\n            `\n            : data;\n\n        const result: esbuild.OnLoadResult = {\n          loader: 'jsx',\n          contents,\n          resolveDir: new URL('./', request.responseURL).pathname,\n        };\n        localforage.setItem(args.path, result);\n        return result;\n      });\n    },\n  };\n};\n","import React, { useRef } from 'react'\nimport MonacoEditor, { EditorDidMount } from \"@monaco-editor/react\";\nimport * as monacoEditor from 'monaco-editor/esm/vs/editor/editor.api';\nimport prettier from 'prettier'\nimport parser from 'prettier/parser-babel'\nimport Highlighter from 'monaco-jsx-highlighter';\nimport codeShift from 'jscodeshift';\nimport Resizable from './resizable';\ninterface IEditor{\n   compiler:(code:string)=>void,\n   initialValue:string\n}\nconst CodeEditor: React.FC<IEditor> = ({ compiler, initialValue})=> {\n\n\n\n   const editorRef = useRef<monacoEditor.editor.IStandaloneCodeEditor>();\n   const formatCode = () => {\n      if (editorRef.current) {\n         const unformattedCode = editorRef.current.getValue()\n         const formattedCode = prettier.format(unformattedCode, {\n            parser: \"babel\",\n            plugins: [parser],\n            useTabs: false,\n            semi: true,\n            singleQuote: true,\n\n         });\n         editorRef.current.setValue(formattedCode);\n      }\n   }\n\n\n   const onEditorMount: EditorDidMount = (getValue, monaco) => {\n      monaco.onDidChangeModelContent(() => {\n         compiler(getValue());\n      })\n      editorRef.current = monaco;\n      const highlighter = new Highlighter(\n         // @ts-ignore\n         window.monaco,\n         codeShift,\n         monaco\n\n      );\n      try {\n         highlighter.highLightOnDidChangeModelContent(\n            () => { },\n            () => { },\n            undefined,\n            () => { },\n         )\n\n      } catch (error) {\n         console.log(error);\n\n      }\n      // console.log(\"🚀 ~ file: preview.tsx ~ line 152 ~ Preview ~ highlighter\", highlighter.highLightOnDidChangeModelContent)\n   }\n   return (\n      <div className=\"editor_code relative \">\n\n         \n         <MonacoEditor\n            editorDidMount={onEditorMount}\n            value={initialValue}\n            height=\"100%\"\n            width=\"100%\"\n            language=\"javascript\"\n            className=\"border-4 border-white border-opacity-100\"\n            theme=\"vs-dark\"\n            options={{\n               wordWrap: 'on',\n               lineNumbersMinChars: 3,\n               scrollBeyondLastLine: false,\n               showUnused: false,\n               automaticLayout: true,\n               tabIndex: 3,\n               fontSize: 16,\n\n            }\n            }\n         />\n         \n         <button onClick={formatCode} className=\"uppercase bg-brass text-[20px] px-2 py-1 absolute top-2 right-2 text-black \">format</button>\n\n      </div>\n   )\n}\n\nexport default CodeEditor\n","import React, { useEffect, useState } from 'react'\nimport { ResizableBox, ResizableProps } from 'react-resizable';\ninterface resizableProps {\n   direction: \"Horizontal\" | \"Vertical\",\n}\nconst Resizable: React.FC<resizableProps> = ({ direction, children }) => {\n   let resizableProp: ResizableProps;\n   const [innerWidth, setInnerWidth] = useState(window.innerWidth)\n   const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n   useEffect(() => {\n      let timer: any;\n      const listener=()=>{\n\n         if(timer){\n            clearTimeout(timer);\n         }\n         \n         timer=setTimeout(()=>{\n            setInnerWidth(window.innerWidth);\n            setInnerHeight(window.innerHeight);\n         },100)\n      }\n      window.addEventListener(\"resize\",listener)\n      return () => {\n         window.removeEventListener(\"resize\",listener);\n      }\n   }, [])\n   if (direction == \"Horizontal\") {\n      resizableProp = {\n         height: Infinity,\n         width: innerWidth*0.75,\n         resizeHandles: ['e'],\n         minConstraints: [innerWidth*0.2, Infinity],\n         maxConstraints: [Infinity, Infinity]\n      }\n   }\n   else {\n      resizableProp = {\n         height: 400,\n         width: Infinity,\n         resizeHandles: ['s'],\n         minConstraints: [Infinity, 400],\n         maxConstraints: [Infinity, window.innerHeight * 0.8]\n      }\n   }\n   return (\n      <ResizableBox {...resizableProp}>\n         {children}\n      </ResizableBox>\n   )\n}\n\nexport default Resizable\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport '../assets/syntax.css';\nimport * as esBuild from 'esbuild-wasm';\nimport { unpkgPathPlugin } from '../plugin/esBuildPlugin';\nimport localforage from 'localforage';\nimport { v4 } from 'uuid';\nimport CodeEditor from './codeEditor';\nimport Resizable from './resizable';\n\nlocalforage.createInstance({\n  name: 'fileCache',\n});\nfunction Preview() {\n  const ref = useRef<HTMLIFrameElement | null>(null);\n  const esbuildRef = useRef<esBuild.Service | null>(null);\n  const initialValue = `\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nconst App=()=>{\n    return <div>\n        <h1>hello world</h1>\n    </div>\n}\nReactDOM.render(\n    <App/>,\n    document.querySelector(\"#root\")\n)\n`;\n\n\n  const startService = async () => {\n    esbuildRef.current = await esBuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\n    });\n    console.time();\n  };\n  useEffect(() => {\n    const initializeApp = async () => {\n      startService();\n    };\n\n    initializeApp();\n\n    setTimeout(() => {\n      compiler(initialValue);\n    }, 3000);\n  }, []);\n\n  const compiler = async (event: string = '') => {\n    if (!esbuildRef.current) {\n      return;\n    }\n    const text = event;\n    try {\n      // const result=await esbuildRef.current.transform(text,{\n      //    loader:\"jsx\",\n      //    target:\"es2015\"\n      // })\n      if (ref.current) ref.current.srcdoc = html;\n\n      const result = await esbuildRef.current.build({\n        entryPoints: ['index.js'],\n        bundle: true,\n        write: false,\n        plugins: [unpkgPathPlugin(text)],\n        define: {\n          'process.env.NODE_ENV': '\"production\"',\n          Global: 'window',\n        },\n      });\n\n      // setData(result.outputFiles[0].text);\n      if (ref.current?.contentWindow) {\n        ref.current.contentWindow.postMessage(result.outputFiles[0].text, '*');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const html = `\n   <!DOCTYPE html>\n   <html lang=\"en\">\n   <head>\n      <meta charset=\"UTF-8\" />\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <title>Document</title>\n   </head>\n   <body>\n      <div id=\"root\"></div>\n   </body>\n   <style>\n      body{\n         color:white;\n      }\n   </style>\n   <script>\n   window.addEventListener(\"message\",(event)=>{\n      try {\n         eval(event.data)\n      } catch (error) {\n         document.querySelector(\"#root\").innerHTML= '<h1>' +  error + '</h1>'\n      }\n   },false)\n   </script>\n   </html>\n   `;\n\n  return (\n    <Resizable direction=\"Vertical\">\n      <div className=\"editor-wrapper\">\n        <Resizable direction=\"Horizontal\">\n          <CodeEditor compiler={compiler} initialValue={initialValue} />\n        </Resizable>\n        <div className=\"preview-wrapper\">\n          <iframe\n            title={v4()}\n            ref={ref}\n            srcDoc={html}\n            width=\"100%\"\n            height=\"100%\"\n            sandbox=\"allow-scripts\"\n            className=\"border-4 border-white border-opacity-100 bg-black \"\n          ></iframe>\n        </div>\n      </div>\n    </Resizable>\n  );\n}\n\nexport default Preview;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Preview from './Components/preview';\n\n\n\nfunction App() {\n  const [editor, setEditor] = useState(1);\n  return (\n    <div className=\"App bg-sand w-full h-[100vh]  items-center gap-3\">\n      {\n        new Array(editor).fill(0).map(_=>{\n          return <Preview/>\n        })\n      }\n      {/* <Preview /> */}\n      \n    </div>\n  );\n}\n\nexport default App;\n","export enum stateType {\r\n    start_search = 'start_search',\r\n    search_success = 'search_success',\r\n    search_error = 'search_error',\r\n}\r\n\r\n\r\nexport interface Links {\r\n    npm: string;\r\n}\r\n\r\nexport interface Author {\r\n    name: string;\r\n    email: string;\r\n    url: string;\r\n    username: string;\r\n}\r\n\r\nexport interface Publisher {\r\n    username: string;\r\n    email: string;\r\n}\r\n\r\nexport interface Maintainer {\r\n    username: string;\r\n    email: string;\r\n}\r\n\r\nexport interface Package {\r\n    name: string;\r\n    scope: string;\r\n    version: string;\r\n    description: string;\r\n    date: Date;\r\n    links: Links;\r\n    author: Author;\r\n    publisher: Publisher;\r\n    maintainers: Maintainer[];\r\n}\r\n\r\nexport interface Detail {\r\n    quality: number;\r\n    popularity: number;\r\n    maintenance: number;\r\n}\r\n\r\nexport interface Score {\r\n    final: number;\r\n    detail: Detail;\r\n}\r\n\r\nexport interface Flags {\r\n    unstable: boolean;\r\n}\r\n\r\nexport interface Object {\r\n    package: Package;\r\n    score: Score;\r\n    searchScore: number;\r\n    flags: Flags;\r\n}\r\n\r\nexport interface RootObject {\r\n    objects: Object[];\r\n    total: number;\r\n    time: string;\r\n}\r\n\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { RootObject, stateType } from \"../actionTypes/types\";\r\n\r\ninterface RespositaryState {\r\n    loading: boolean;\r\n    data?: RootObject;\r\n    message?: string\r\n}\r\nexport interface initialState {\r\n    type: stateType.start_search;\r\n}\r\nexport interface errorState {\r\n    type: stateType.search_error;\r\n    message: string;\r\n}\r\nexport interface successState {\r\n    type: stateType.search_success;\r\n    payload: RootObject;\r\n}\r\n\r\n\r\ntype Action = initialState | successState | errorState;\r\n\r\n\r\n\r\nconst initialState: RespositaryState = {\r\n    loading: true\r\n}\r\n\r\nconst RepositoryReduces = (\r\n    state: RespositaryState = initialState,\r\n    action: | initialState | successState | errorState\r\n): RespositaryState => {\r\n    switch (action.type) {\r\n        case stateType.start_search:\r\n            return { loading: true };\r\n        case stateType.search_success:\r\n            return { loading: false, data: action.payload };\r\n        case stateType.search_error:\r\n            return { loading: false, message: action.message };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default RepositoryReduces;","\r\nimport { TypedUseSelectorHook } from \"react-redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport RepositoryReduces from \"./RepositoryReducers\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    Repository: RepositoryReduces\r\n})\r\n\r\nexport default reducers;\r\n\r\nexport type rootState = ReturnType<typeof reducers>;\r\n\r\n\r\n\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(thunk))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport './assets/main.css' \nimport './assets/tailwind.css' \nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}